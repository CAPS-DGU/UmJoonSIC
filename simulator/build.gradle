plugins {
    id 'java'
    id 'application'
    id 'com.gradleup.shadow' version '9.0.2' // Shadow plugin for fat JARs
}

// Your main class (package path matches src/main/java/com/sicserver/Main.java)
application {
    mainClass = 'com.sicserver.Main'
}

// Java version
sourceCompatibility = 17
targetCompatibility = 17

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.sparkjava:spark-core:2.9.4'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.slf4j:slf4j-simple:2.0.7'
}

// Include the SicTools source tree in your main source set
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'SicTools/src'
        }
        resources {
            // if SicTools has any non-Java resources you need at runtime, include them:
            srcDir 'SicTools/src'
        }
    }
}

// Ensure the manifest has Main-Class for both regular jar and the shadow jar
jar {
    manifest {
        attributes(
                'Main-Class': application.mainClass
        )
    }
}

tasks.named('shadowJar') {
    // make the output name obvious
    archiveClassifier.set('all')

    // Merge service files to avoid "duplicate entry" issues from dependencies
    mergeServiceFiles()

    // Do NOT call minimize() here; Spark/Jetty use reflection and minimization can break things.
}

// When you run `gradle build`, also build the fat jar
build.dependsOn tasks.shadowJar

// Keep your interactive run behavior
run {
    standardInput = System.in
}
